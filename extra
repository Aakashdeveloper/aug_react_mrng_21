https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/
https://git-scm.com/downloads

Npm
React = 3
Mock API
json-server
Github
Depolyment
-> MERN
-> heroku
-> Aws
-> Docker
-> Nginx
React-JWT(Login Logout)-2
React_hooks -1
React-GraphQL-1
/////////////////////

HOC
Basic React Native=1
React-Redux =1
React-Redux =1
//walkthrough
React-Saga -1
React-with-typescript-1
Testing Jest Enzime


--------NOT Backend--------------
API
GraphQL
Login/Logout

React is a frontend framework/lib that help to build single page applications
using component base structure

SPA> Single Page Application
open source


    JSON> JavaScript Object Notation
    [
        {
            "name":"John",
            "city":"London"
        },
        {
            "name":"Bhumika",
            "city":"Paris"
        }
    ]

>>>>>>>>
Autoclose tab
tabnine
vscode-icons
githistory
gitlens

////////////////////////
Package.json
////////////////////////
> metaData(name,version, description)
packages
scripts

////////////////////////
Step to generate Package.json
////////////////////
*NodeJs Must be installed
> go inside the folder using cmd/terminal
> npm init
> answer all questions
> type "yes"

**npm init -y

////////////////////////
Step to install Package.
////////////////////
> go inside the folder using cmd/terminal
> npm i packagename/ npm install packagename/npm i packagenamee --save
> npm i react
> npm uninstall react


////////////////////////
Step to generate react app 
////////////////////

//Windows
----One Time-----
> open cmd as administrator
> npm i -g create-react-app

----Next Every Time-----
> Go inside the folder using cmd
> create-react-app appname

//mac/linux
----One Time-----
> open terminal
> sudo npm i -g create-react-app

----Next Every Time-----
> Go inside the folder using terminal
> create-react-app appname

////////////////////////
> Go inside the folder using terminal/cmd
> npx create-react-app appname

>npm start
>localhost:3000


function test(a,b){
    return a,b
}

test(1,2)
2


https://developerhotel.herokuapp.com/

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook



block > start in new line
inline > start from same line

inline > styleTag > stylesheet

<div></div>

inline 
{
    color:red,
    font-size:5
}

styletage{
    font-size:2,
    text-align:center;
}

stylesheet {
    color:orange;
    font-size:6,
    text-align:right;
    margin:10
}


{
    color:red,
    font-size:5
    text-align:center;
    margin:10
}

TagName > h1, p
. class > Use to target group of element 
# id > use to target specific element


 lg <1200px
 md <992px
 sm <768px
 xs >768px

map
filter
indexof


////////Component//////
class 
> Logical Component
> We use to interact with data, api call, event and display as well
> Can maintain state
> Any data interaction should happen through state


function
> Dumb component
> They use for the display purpose
> We cannot maintain state

hooks


State
> act like a local variable
> any data interaction will happen through state
> It is mutable( we can update the value of state)

Props
> Props help to transfer the data
> immutable ( we cannot update the value of props directly)
> it can only transfer data between 2 nested component



var a = [1,2,3,4]

for(i=0;i<a.length;i++){
    console.log(a[i])
}

a.map((data) => {console.log(data)})

<div className="main-div">
                <img src={data.image}  style={{width:60}}/>
                <h4 className="media-heading">{data.name}</h4>
                   
            </div>

function add(abc,xyz){
    return abc+xyz
}

var a = [5,4,6,3,9,6,3]
a.filter((data)=> {return data>5})
(3) [6, 9, 6]

var city = ["London","Delhi","Newyork","Amsterdam"]
undefined
city.indexOf('Delhi')
1
city.indexOf('London')
0
city.indexOf('Amsterdam')
3
city.indexOf('Mumbai')
-1
city.indexOf('Venice')
-1


parent => child (property)
child => parent (property with function)

parent
function add(abc,xyz){
    return abc+xyz
}

child
add(1,2)


params = / (need tp define complusory )
queryParam = ? (no need to define)

history > redirection
location > use to fetch queryParam
match > use to fetch params

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

//dummy api

> install global package
> npm i -g json-server
> json-server --watch booking.json --port 8200

///// string literal /////
var a = 10
var b = "my age is "+a 
"my age is 10"

var c = `my age is ${a}`
"my age is 10"

//payment gateway url
https://developerpayment.herokuapp.com/paynow


var a = "status=TXN_SUCCESS&ORDERID=TEST_2699&date=2021-09-01%2008:21:00.0&bank=Andhra%20Bank"

undefined
a.split('&')
(4) ["status=TXN_SUCCESS", "ORDERID=TEST_2699", "date=2021-09-01%2008:21:00.0", "bank=Andhra%20Bank"]0: "status=TXN_SUCCESS"1: "ORDERID=TEST_2699"2: "date=2021-09-01%2008:21:00.0"3: "bank=Andhra%20Bank"length: 4[[Prototype]]: Array(0)
var out = a.split('&')

out[0].split('=')
(2) ["status", "TXN_SUCCESS"]
out[0].split('=')[1]
"TXN_SUCCESS"

out[1].split('=')[1]
"TEST_2699"

out[2].split('=')[1]
"2021-09-01%2008:21:00.0"

out[3].split('=')[1]
"Andhra%20Bank"

out[1].split('=')[1].split('_')
(2) ["TEST", "2699"]
out[1].split('=')[1].split('_')[1]
"2699"

/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps


// deployment
> npm run build

npm i apollo-boost apollo-graphql graphql graphql-tag react-apollo

////////////////////
step to generate react native
////////////////////
> npm i -g create-react-native-app
> create-react-native-app appname 
> npm run web


in mobile install one app "expo"

HOC > High Order Component
hoc take input as data and component and return component with data